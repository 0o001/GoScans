// Code generated by "stringer -linecomment -output=types_cipher_string.go -type=Protocol,Encryption,EncryptionMode,Authentication,KeyExchange,Mac,Prf ./"; DO NOT EDIT.

package ssl

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PROTO_Unknown-0]
	_ = x[Sslv2-1]
	_ = x[Sslv3-2]
	_ = x[Tlsv1_0-3]
	_ = x[Tlsv1_1-4]
	_ = x[Tlsv1_2-5]
	_ = x[Tlsv1_3-6]
}

const _Protocol_name = "SSLv2SSLv3TLSv1.0TLSv1.1TLSv1.2TLSv1.3"

var _Protocol_index = [...]uint8{0, 0, 5, 10, 17, 24, 31, 38}

func (i Protocol) String() string {
	if i >= Protocol(len(_Protocol_index)-1) {
		return "Protocol(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Protocol_name[_Protocol_index[i]:_Protocol_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ENC_NONE-1]
	_ = x[ENC_DES-2]
	_ = x[ENC_RC2-3]
	_ = x[ENC_TRIPLE_DES-4]
	_ = x[ENC_SKIPJACK-5]
	_ = x[ENC_SEED-6]
	_ = x[ENC_IDEA-7]
	_ = x[ENC_CAMELLIA-8]
	_ = x[ENC_ARIA-9]
	_ = x[ENC_GOST28147-10]
	_ = x[ENC_AES-11]
	_ = x[ENC_RC4-12]
	_ = x[ENC_CHACHA20-13]
}

const _Encryption_name = "No encryptionDESRC23DESFORTEZZASEEDIDEACamelliaARIAGOST 28147AESRC4ChaCha20"

var _Encryption_index = [...]uint8{0, 13, 16, 19, 23, 31, 35, 39, 47, 51, 61, 64, 67, 75}

func (i Encryption) String() string {
	i -= 1
	if i >= Encryption(len(_Encryption_index)-1) {
		return "Encryption(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _Encryption_name[_Encryption_index[i]:_Encryption_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ENC_M_NONE-1]
	_ = x[ENC_M_CBC-2]
	_ = x[ENC_M_CCM-3]
	_ = x[ENC_M_CCM_8-4]
	_ = x[ENC_M_GCM-5]
	_ = x[ENC_M_POLY1305-6]
	_ = x[ENC_M_CNT-7]
}

const _EncryptionMode_name = "No encryption modeCBCCCMCCM8GCMPoly1305CNT"

var _EncryptionMode_index = [...]uint8{0, 18, 21, 24, 28, 31, 39, 42}

func (i EncryptionMode) String() string {
	i -= 1
	if i >= EncryptionMode(len(_EncryptionMode_index)-1) {
		return "EncryptionMode(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _EncryptionMode_name[_EncryptionMode_index[i]:_EncryptionMode_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[AUTH_NONE-1]
	_ = x[AUTH_TLSv1_3-2]
	_ = x[AUTH_DSS-3]
	_ = x[AUTH_ECDSA-4]
	_ = x[AUTH_ECNRA-5]
	_ = x[AUTH_FORTEZZA_KEA-6]
	_ = x[AUTH_GOSTR341001-7]
	_ = x[AUTH_GOSTR341094-8]
	_ = x[AUTH_KRB5-9]
	_ = x[AUTH_PSK-10]
	_ = x[AUTH_RSA-11]
	_ = x[AUTH_SRP_SHA-12]
}

const _Authentication_name = "No authenticationRSA / ECDSA / RSA-PSS / EdDSA / PSKDSSECDSAECNRAFORTEZZA_KEAGOST R 34.10.2001GOST R 34.10.1994KRB5PSKRSASRP_SHA"

var _Authentication_index = [...]uint8{0, 17, 52, 55, 60, 65, 77, 94, 111, 115, 118, 121, 128}

func (i Authentication) String() string {
	i -= 1
	if i >= Authentication(len(_Authentication_index)-1) {
		return "Authentication(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _Authentication_name[_Authentication_index[i]:_Authentication_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[KEX_DH-1]
	_ = x[KEX_DHE-2]
	_ = x[KEX_ECDH-3]
	_ = x[KEX_ECDHE-4]
	_ = x[KEX_ECMQV-5]
	_ = x[KEX_ECCPWD-6]
	_ = x[KEX_FORTEZZA_KEA-7]
	_ = x[KEX_GOSTR341001-8]
	_ = x[KEX_GOSTR341094-9]
	_ = x[KEX_KRB5-10]
	_ = x[KEX_PSK-11]
	_ = x[KEX_RSA-12]
	_ = x[KEX_SRP_SHA-13]
	_ = x[KEX_TLSv1_3-14]
}

const _KeyExchange_name = "DHDHEECDHECDHEECMQVECCPWDFORTEZZA_KEAGOST R 34.10-2001GOST R 34.10.1994KRB5PSKRSASRP_SHA(EC)DHE / PSK / PSK + (EC)DHE"

var _KeyExchange_index = [...]uint8{0, 2, 5, 9, 14, 19, 25, 37, 54, 71, 75, 78, 81, 88, 117}

func (i KeyExchange) String() string {
	i -= 1
	if i >= KeyExchange(len(_KeyExchange_index)-1) {
		return "KeyExchange(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _KeyExchange_name[_KeyExchange_index[i]:_KeyExchange_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MAC_AEAD-1]
	_ = x[MAC_MD2-2]
	_ = x[MAC_MD5-3]
	_ = x[MAC_SHA1-4]
	_ = x[MAC_SHA224-5]
	_ = x[MAC_SHA256-6]
	_ = x[MAC_SHA384-7]
	_ = x[MAC_SHA512-8]
	_ = x[MAC_RIPEMD160-9]
	_ = x[MAC_GOSTR341194-10]
	_ = x[MAC_GOST28147-11]
	_ = x[MAC_STREEBOG256-12]
	_ = x[MAC_BLAKE2B-13]
	_ = x[MAC_BLAKE2S-14]
}

const _Mac_name = "AEADMD2MD5SHA1SHA224SHA256SHA384SHA512RMDGOSTR341194GOST28147Streeborg256BLAKE2bBLAKE2s"

var _Mac_index = [...]uint8{0, 4, 7, 10, 14, 20, 26, 32, 38, 41, 52, 61, 73, 80, 87}

func (i Mac) String() string {
	i -= 1
	if i >= Mac(len(_Mac_index)-1) {
		return "Mac(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _Mac_name[_Mac_index[i]:_Mac_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PRF_NONE-1]
	_ = x[PRF_MD2-2]
	_ = x[PRF_MD5-3]
	_ = x[PRF_SHA1-4]
	_ = x[PRF_SHA224-5]
	_ = x[PRF_SHA256-6]
	_ = x[PRF_SHA384-7]
	_ = x[PRF_SHA512-8]
	_ = x[PRF_RIPEMD160-9]
	_ = x[PRF_GOST28147-10]
	_ = x[PRF_BLAKE2B-11]
	_ = x[PRF_BLAKE2S-12]
}

const _Prf_name = "MD2MD5SHA1SHA224SHA256SHA384SHA512RMDIMIT GOST28147BLAKE2bBLAKE2s"

var _Prf_index = [...]uint8{0, 0, 3, 6, 10, 16, 22, 28, 34, 37, 51, 58, 65}

func (i Prf) String() string {
	i -= 1
	if i >= Prf(len(_Prf_index)-1) {
		return "Prf(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _Prf_name[_Prf_index[i]:_Prf_index[i+1]]
}
